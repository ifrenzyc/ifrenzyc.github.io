<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on ITSYC</title>
    <link>https://ifrenzyc.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on ITSYC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright 2017 Yang Chuang</copyright>
    <lastBuildDate>Fri, 17 Nov 2017 20:19:34 +0800</lastBuildDate>
    
	<atom:link href="https://ifrenzyc.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MariaDB 的安装部署</title>
      <link>https://ifrenzyc.github.io/post/mariadb-%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Fri, 17 Nov 2017 20:19:34 +0800</pubDate>
      
      <guid>https://ifrenzyc.github.io/post/mariadb-%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>MySQL 的版本选择及安装部署 由于 MariaDB 是基于 MySQL 分支开发的，对一些 bug 修复和特性支持做得更好一些，本文介绍 MariaDB 的简易安装。 版本选取 MySQL: 5.7.x: 5.7.16(current) MariaDB: 10.1.x: 10.1.19(current) 推荐！ MariaDB 10.1 版本</description>
    </item>
    
    <item>
      <title>MySQL 安装部署</title>
      <link>https://ifrenzyc.github.io/post/mysql-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Fri, 17 Nov 2017 15:49:34 +0800</pubDate>
      
      <guid>https://ifrenzyc.github.io/post/mysql-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>依赖 MySQL 版本 ：5.7.19 CenOS 版本 ：CentOS-7-x86_64-1704 系统用户 ：user9（文中所有涉及到的 user9 都是指代系统用户名，需要替换</description>
    </item>
    
    <item>
      <title>MySQL Streaming 的使用和约束</title>
      <link>https://ifrenzyc.github.io/post/mysql-streaming-%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E7%BA%A6%E6%9D%9F/</link>
      <pubDate>Thu, 16 Nov 2017 17:39:34 +0800</pubDate>
      
      <guid>https://ifrenzyc.github.io/post/mysql-streaming-%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E7%BA%A6%E6%9D%9F/</guid>
      <description>在 Oracle 下，开发人员开发 Java 连接数据库进行超大结果集的查询后处理的程序时，可以通过设置游标进行小批量、迭代多次获取数据记录，避免程序出现 OOM 异常。 而</description>
    </item>
    
  </channel>
</rss>